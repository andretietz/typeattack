name: Release

on:
  push:
    tags:
      - 'v[01].[0-9]+.[0-9]+'

jobs:
  build:
    name: Building release for ${{ matrix.os }}
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        image: [ ubuntu-latest, windows-latest, macos-latest ]
        include:
          - image: ubuntu-latest
            os: linux
            artifact_name: typeattack
            sed_command: sed -i'' "s/^version.*$/version = \"$version\"/g" Cargo.toml
            zipcommand: zip -j typeattack-linux-x86_64.zip target/release/typeattack README.md
            asset_name: typeattack-linux-x86_64
          - image: windows-latest
            os: windows
            zipcommand: Compress-Archive target/release/typeattack.exe,README.md typeattack-windows-x86_64.zip
            sed_command: sed -i'' "s/^version.*$/version = \"$version\"/g" Cargo.toml
            artifact_name: typeattack.exe
            asset_name: typeattack-windows-x86_64
          - image: macos-latest
            os: macos
            zipcommand: zip -j typeattack-macos-x86_64.zip target/release/typeattack README.md
            artifact_name: typeattack
            asset_name: typeattack-macos-x86_64
            sed_command: sed -i '' "s/^version.*$/version = \"$version\"/g" Cargo.toml

    steps:
      - name: Setup Rust environment
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: Checking out code...
        uses: actions/checkout@v1

      - name: Adjusting Cargo.toml for release...
        run: |
          version=$(grep "^version" Cargo.toml | cut -d"\"" -f2 )
          if [[ $version != *"-SNAPSHOT"* ]]; then
            echo "Version string MUST contain \"-SNAPSHOT\"!"
            exit 1;
          fi
          version=$(echo $version | sed 's/-SNAPSHOT//g')
          tag=$(echo ${GITHUB_REF/refs\/tags\//} | sed 's/^.//')
          if [[ $version != $tag ]]; then
            echo "Version Mismatch! The version you want to build doesn't match the version in your Cargo.toml.";
            exit 1;
          fi
          ${{ matrix.sed_command }}
        shell: bash

      - name: Build
        run: |
          cargo test
          cargo build --release --locked
          ${{ matrix.zipcommand }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ matrix.asset_name }}.zip
          asset_name: ${{ matrix.asset_name }}.zip
          tag: ${{ github.ref }}
          overwrite: true
